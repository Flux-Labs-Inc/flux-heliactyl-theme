<head>
    <title>Flux</title>
    <link rel="stylesheet" href="../assets/tailwind.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://unpkg.com/@popperjs/core@2.10.1/dist/umd/popper.min.js"></script>

    <!-- Inter font -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@200;300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.2/dist/alpine.min.js" defer></script>
</head>
<body class="bg-gray-100" style="font-family: 'Inter', sans-serif;">
<%
let ram = 0;
let disk = 0;
let cpu = 0;
let servers = pterodactyl.relationships.servers.data.length;
for (let i = 0, len = pterodactyl.relationships.servers.data.length; i < len; i++) {
    ram = ram + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.memory == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.memory : 0);
    disk = disk + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.disk == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.disk : 0);
    cpu = cpu + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.cpu == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.cpu : 0);
}
%>
    <%- include('components/navigation') %>
    <div class="md:pl-48 flex flex-col flex-1">
      <main class="flex-1 pb-32">
        <div class="py-6">
          <!-- Skeleton loader -->
          <%- include('components/skeleton') %>
          <div class="hidden max-w-7xl pt-8 mx-auto px-4 sm:px-6 md:px-8" id="content">
            <!-- Replace with your content -->
            <% if (req.query.err) { %>
                <div class="rounded-2xl bg-white p-8 mb-5">
                  <div class="flex">
                    <div class="flex-shrink-0">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-5 w-5 text-amber-400">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>                      
                    </div>
                    <div class="ml-3">
                      <h3 class="text-md font-medium tracking-tight text-gray-700">An error was encountered</h3>
                      <div class="mt-1 text-sm text-gray-500">
                        <p>Error code: <code><%= req.query.err %></code></p>
                      </div>
                    </div>
                  </div>
                </div>  
            <% } %>
            <div class="lg:flex lg:items-center lg:justify-between bg-white py-6 px-10 rounded-2xl">
              <div class="min-w-0 flex-1">
                <h2 class="text-2xl font-medium text-gray-900 sm:truncate tracking-tight">New Deployment</h2>
                <p class="text-sm font-thin text-gray-500">Deploy a new server on Flux.</p>
              </div>
            </div>
            <% if ((packages ? packages.ram : 0)/1024 + extraresources.ram/1024 - ram/1024 > 0) { %>
            <div class="card mt-5">
              <div class="card-body">
                  <label for="location" class="text-sm tracking-tight text-gray-600">Server Name</label><br>
                  <input type="text" class="mt-3 focus:border-blue-600 focus:ring-blue-600 border border-gray-200 transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-full" id="name" placeholder="Name">
                  <br>
                  <label for="location" class="text-sm tracking-tight text-gray-600">Location</label>
                  <dl class="mt-5 grid grid-cols-1 gap-5 sm:grid-cols-3">
                      <script>
                      let inputLocation = ""
                      function setLocation(num) {
                      	inputLocation = num;
                        console.log(num)
 alertify.set('notifier','position', 'bottom-center');
 alertify.success('Location selected!');
                      }
                      </script>
                        <!-- Resources -->
                        <div onclick="setLocation(1)" class="px-4 py-5 bg-gray-50 transition hover:bg-gray-100/70 rounded-2xl overflow-hidden sm:p-6 cursor-pointer">
                            <dt class="text-sm font-thin tracking-tight text-gray-500 truncate">
                            United States
                            <span class="inline">
                              <img style="height: 18px; margin-left: 3px; display: inline; width: 18px; border-radius: 4px;" src="https://cdn-icons-png.flaticon.com/512/299/299722.png">
                            </span></dt>
                            <dd class="mt-1 text-1xl font-light tracking-tighter text-gray-900">
                                Phoenix 
                            </dd>
                            <hr class="mt-4 mb-4">
                            <span class="text-gray-600 text-sm"><span class="text-gray-800 text-sm" id="phoenix">
                              <svg class="animate-spin h-4 w-4 text-gray-800 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                              </svg>
                            </span> of 500 servers</span> <span class="transition bg-gray-100 hover:bg-gray-200/50 ml-2 text-gray-700 text-xs font-medium me-2 px-3 py-1 rounded-full">Free</span>
                        </div>
                        <div onclick="setLocation(2)" class="px-4 py-5 bg-gray-50 transition hover:bg-gray-100/70 rounded-2xl overflow-hidden sm:p-6 cursor-pointer">
                          <dt class="text-sm font-thin tracking-tight text-gray-500 truncate">
                          France
                          <span class="inline">
                            <img style="height: 18px; margin-left: 3px; display: inline; width: 18px; border-radius: 4px;" src="https://cdn-icons-png.flaticon.com/512/299/299753.png">
                          </span></dt>
                          <dd class="mt-1 text-1xl font-light tracking-tighter text-gray-900">
                              Marseille
                          </dd>
                          <hr class="mt-4 mb-4">
                          <span class="text-gray-600 text-sm"><span class="text-gray-800 text-sm" id="marseille">
                            <svg class="animate-spin h-4 w-4 text-gray-800 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                          </span> of 250 servers</span> <span class="transition bg-gray-100 hover:bg-gray-200/50 ml-2 text-gray-700 text-xs font-medium me-2 px-3 py-1 rounded-full">Free</span>
                      </div>
                    </dl>
                  <br>
                  <label for="location" class="text-sm tracking-tight text-gray-600" title="Please use Vanilla ARM instead of Vanilla if you are going to be using the France location.">Software
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-gray-800 mr-1.5 inline">
  <path stroke-linecap="round" stroke-linejoin="round" d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z" />
</svg>
</label>
                  <select class="mt-3 focus:border-blue-600 focus:ring-blue-600 border border-gray-200 transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-full" id="egg">
                    <% for (let [name, value] of Object.entries(settings.api.client.eggs)) { %>
                      <option value="<%= name %>"><%= value.display %></option>
                    <% } %>
                  </select>
                  <br>
                  <label for="ram" class="text-sm tracking-tight text-gray-600">Memory (GiB)</label>
                  <input type="text" class="mt-3 focus:border-blue-600 focus:ring-blue-600 border border-gray-200 transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-full" id="ram" placeholder="<%= (packages ? packages.ram : 0)/1024 + extraresources.ram/1024 - ram/1024 %>" value="<%= (packages ? packages.ram : 0)/1024 + extraresources.ram/1024 - ram/1024 %>">
                  <br>
                  <label for="disk" class="text-sm tracking-tight text-gray-600">Storage (GiB)</label>
                  <input type="text" class="mt-3 focus:border-blue-600 focus:ring-blue-600 border border-gray-200 transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-full" id="disk" placeholder="<%= (packages ? packages.disk : 0)/1024 + extraresources.disk/1024 - disk/1024 %>" value="<%= (packages ? packages.disk : 0)/1024 + extraresources.disk/1024 - disk/1024 %>">
                  <br>
                  <label for="cpu" class="text-sm tracking-tight text-gray-600">CPU Cores</label>
                  <input type="text" class="mt-3 focus:border-blue-600 focus:ring-blue-600 border border-gray-200 transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-full" id="cpu" placeholder="<%= (packages ? packages.cpu : 0)/100 + extraresources.cpu/100 - cpu/100 %>" value="<%= (packages ? packages.cpu : 0)/100 + extraresources.cpu/100 - cpu/100 %>">
                  <br>
                  
                  <a href="javascript:submitForm()" type="button" class="transition inline-flex items-center rounded-full bg-blue-600 px-6 py-1.5 text-sm font-light text-white hover:bg-blue-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600" onclick="replaceWithLoader()">
                    <span id="contentWrapper" class="flex"> 
                      Create
                    </span>
                    <span id="loaderWrapper" style="display:none;">
                      <svg class="animate-spin ml-6 mr-6 mt-0.5 mb-0.5 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                    </span>
                  </a>
              <br></div>
              <script>
                  async function submitForm() {
                      let name = encodeURIComponent(document.getElementById("name").value);
                      let egg = encodeURIComponent(document.getElementById("egg").value);
                      let ram = encodeURIComponent(document.getElementById("ram").value);
                      let disk = encodeURIComponent(document.getElementById("disk").value);
                      let cpu = encodeURIComponent(document.getElementById("cpu").value);
                      let location = inputLocation;
                      document.location.href = `/create?name=${name}&egg=${egg}&ram=${ram*1024}&disk=${disk*1024}&cpu=${cpu*100}&location=${location}`;
                  };
              </script>
              <script>
                document.addEventListener('DOMContentLoaded', async () => {
                  try {
                    const response = await fetch(`../node/1`, {
                      method: 'GET'
                    });
              
                    if (!response.ok) {
                      throw new Error(`HTTP error! Status: ${response.status}`);
                    }
              
                    const data = await response.json();
                    const serverCount = data.serverCount;
              
                    // Update the content of the span with id "node1" with the server count
                    document.getElementById('phoenix').innerText = serverCount;
                  } catch (error) {
                    console.error('Error fetching server count:', error.message);
                  }
                });
              </script>
              <script>
                document.addEventListener('DOMContentLoaded', async () => {
                  try {
                    const response = await fetch(`../node/2`, {
                      method: 'GET'
                    });
              
                    if (!response.ok) {
                      throw new Error(`HTTP error! Status: ${response.status}`);
                    }
              
                    const data = await response.json();
                    const serverCount = data.serverCount;
              
                    // Update the content of the span with id "node1" with the server count
                    document.getElementById('marseille').innerText = serverCount;
                  } catch (error) {
                    console.error('Error fetching server count:', error.message);
                  }
                });
              </script>
              </div>
          <% } else { %>
            <div class="text-center md:mt-[30vh]">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="mx-auto h-12 w-12 text-amber-500">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
              </svg>                  
              <h3 class="mt-4 text-md font-semibold tracking-tight text-gray-900">Insufficient resources</h3>
              <p class="mt-1 text-xs text-gray-500">You need at least 1 GiB memory in order to deploy a server.</p>
              <div class="mt-6">
                <a href="../servers" type="button" class="transition inline-flex items-center rounded-full bg-white px-6 py-1.5 text-xs font-light text-gray-700 hover:text-gray-900 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="-ml-0.5 mr-1.5 h-4 w-4 text-gray-800">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
                  </svg>                  
                  Back
                </a>
              </div>
            </div>       
          <% } %>
            <!-- /End replace -->
          </div>
        </div>
      </main>
    </div>
  </div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/alertify.js" integrity="sha512-eOUPKZXJTfgptSYQqVilRmxUNYm0XVHwcRHD4mdtCLWf/fC9XWe98IT8H1xzBkLL4Mo9GL0xWMSJtgS5te9rQA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</body>